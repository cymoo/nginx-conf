# 反向代理配置

server {
    listen 80;
    server_name foo.com;
    root /path/to/root;

    location / {
        try_files $uri @proxy_to_app;
        expires 3d;
    }

    location @proxy_to_app {
        proxy_pass http://127.0.0.1:3000;
        # 启用缓冲，如果需要处理 streaming request/response，或者使用 comet，websocket，则需关闭缓冲
        proxy_buffering on;

        # 为被代理服务器添加必要的请求头
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        ##
        # 设置缓存
        ##

        # 设置缓存路径
        # proxy_cache_path /var/tmp/nginx-proxy-cache levels=1:2 keys_zone=mycache:10m;

        # 设置缓存 zone
        # proxy_cache mycache;

        # 定义如何生成缓存的键
        # proxy_cache_key $scheme$proxy_host$request_uri;

        # 定义 nignx 不从缓存读取响应的条件，如果至少一个字符串条件为空而且非 “0”，nginx 就不会从缓存中取响应
        # proxy_cache_bypass $http_pragma $http_authorization;

        # 定义 nginx 不将响应写入缓存的条件，如果至少一个字符串条件为空而且非 “0”，nginx 就不将响应写入缓存
        # proxy_no_cache $http_pragma $http_authorization;

        # 指定具有哪些请求方法的响应将被缓存，GET 与 HEAD 总是被缓冲，但建议扔显式的指明它们
        # proxy_cache_methods GET HEAD;

        # 为不同的响应状态码设置不同的缓存时间
        # proxy_cache_valid 200 302 10m;

        # --------------------------------------------------

        # 设置后端服务器 location 响应头和 refresh 响应头的替换文本
        # proxy_redirect default;

        # 设置 Set-Cookie 响应头中的 domain 属性的替换文本
        # proxy_cookie_domain off;

        # 设置 Set-Cookie 响应头中的 path 属性的替换文本
        # proxy_cookie_path off;

        # 设置额外的响应头，这些响应头也不会发送给客户端
        # proxy_hide_header X-Powered-By;

        # 设置与后端服务器建立连接的超时时间，注意这个时间不应大于 75s
        # proxy_connect_timeout 60s;

        # 定义向后端服务器传输请求的超时
        # proxy_send_timeout 60s;

        # 定义从后端服务器读取响应的超时
        # proxy_read_timeout 60s;
    }
}
