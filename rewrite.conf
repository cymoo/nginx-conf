# 参考：1. https://www.cnblogs.com/minirice/p/8872093.html
       2. http://nginx.org/en/docs/http/ngx_http_rewrite_module.html

##
# rewrite
# 执行顺序详见文档
# 之前的 query string 会被附在 replacement 后面，若要避免这种情况，需在 replace 后加 ?
##

##
# last vs break
# 均立即停止所有当前上下文中的 rewrite 指令模块
# last 会用新的 URL 搜寻新的 location；break 不会搜寻新的location，其直接用这个 URL来处理请求，这样能避免重复 rewrite
# 尽可能在 server 上下文中使用 last；在 location 上下文中使用 break
##

##
# redirect (302), permanent (301)
# 终止搜寻，让浏览器发起请求；如果 replacement 以http://, https://，或 $scheme 开头，效果与 redirect 相同
##

##
# return
# 1. return code：相应内容为 nginx 默认的，比如 404, not found；若为 444，则直接关闭 TCP 连接
# 2. return code text：覆盖默认内容，code 不能为重定向的 30x
# 3. return code URL：URL 为 http:// 或 https:// 等绝对 URL，code 只能为30x
# 4. return URL：code 默认为302，URL 同上
##

server {
    listen 3456;
    default_type text/plain;
    root /path/to/root;

    if ($http_user_agent !~* webkit) {
        return 403 "you are a robot;
    }

    rewrite ^/foo/(.*) /$1;
    rewrite ^/bar/(.*) /$1 last;
    rewrite ^/fox/(.*) /$1;

    location ~ /capture/(?<path>.+) {
        return 200 "/capture/$path";
    }

    location /audio {
        rewrite ^/audio/foo/(.*) /$1;
        rewrite ^/audio/bar/(.*) /$1 break;
        rewrite ^/audio/bax/(.*) /$1;

        return 200 "audio: $uri; $request_filename";
    }
}